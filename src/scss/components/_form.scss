// form tags do not inherit font-family so we need to manualy do it

.form {

      

    &__group{

        &:not(:last-child){
            margin-bottom: $margin-small;
        }
    }

    &__input{
        color: $color-grey-dark;
        font-family: inherit;
        font-size: 1.2rem;
        padding: $padding-xs $padding-small;
        border-radius: 2px;
        background-color: rgba($color-white, 80%);
        border:none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s ease;

        @include respond(phone){
            width: 100%;
        }

 // For accesibility puproses never only set the focus outline to none as 
//  some people accessing from tablets + phones need some sort of visual resonse to what is in focus
        &:focus{
            outline: none;
            @include boxShadow;
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid{
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder{
            color:$color-grey;
        }
    }

    &__label{
        display: block;
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .5rem;
        color: $color-black;
        transition:all .3s ease-out;
    }

    // the adjactent sibling css selector " + " selects the first sibling adjacent to the first sibling. 
// If we want to use a general sibling selector we would use " ~ " which is when there is level between 
// the siblings you wan to select
    &__input:placeholder-shown + &__label{
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);

        @include respond(tab-port){
            transform: translateY(-3rem);
        }
    }



    &__radio-group{

        display: inline-block;

        @include respond(phone){
            width:45%;
        }

        &:not(:last-child){
            margin-right: $margin-small;
            margin-bottom:  $margin-small;

            @include respond(phone){
                // margin-right: $margin-xs;
            }
        }
    }

    &__radio-input{
        visibility: hidden;
    }

    &__radio-label{
        position: relative;
        font-size: $h5;
        cursor: pointer;
        padding-left: $padding-medium;
        white-space: nowrap;

        @include respond(phone){
            padding-left: 3rem;
        }
    }

    &__radio-button{
        height: 3rem;
        width:3rem;
        border:solid 3px $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        left:0;
        top:-.5rem;

        @include respond(phone){
            height: 2rem;
            width:2rem;
        }

        

        

        &::after{
            content:"";
            opacity: 0;
            height: 1.5rem;
            width:1.5rem;
            background-color: $color-primary;
            border-radius: 50%;
            display: block;
            @include center;
            transition: opacity .2s;
        
        }
    }
// once we click the radio label the psuedo radio input:checked is activated 
// and we can use that psuedo in our radio-button::after by doing th following
// we select radio-input and then select it's sibling, the radio-label and then
// select it's child, which is the radio-button::after
    &__radio-input:checked ~ &__radio-label &__radio-button::after{
        opacity: 1;
    }
}